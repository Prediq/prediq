-if @user.errors.any?
  #error_explanation
    %h2= "#{pluralize(@user.errors.count, "error")} prohibited this User from being saved:"
    %ul
      - @user.errors.full_messages.each do |msg|
        %li= msg

.field
  = f.label :email
  = f.text_field :email

.field
  = f.label :first_name
  = f.text_field :first_name

.field
  = f.label :last_name
  = f.text_field :last_name

- if params[:func].present?
  .field
    = f.label "Role"
    -#- Role.all.each do |role|
    - eval("Role.#{params[:func]}").each do |role|
      - if current_admin.has_any_role?( :superadmin, :admin )
        -#= radio_button_tag( :admin_role, role.name, @user.role_ids.include?( role.id ) )
        -#= f.radio_button( 'admin', 'admin_role', @user.role_ids.include?( role.id ) )
        -#= f.input :role_ids, :collection => Role.all, :as => :radio_buttons, :label_method => lambda {|t| t.name.titleize}, :label => false, :item_wrapper_class => 'inline', checked: @user.role_ids.include?( role.id )
        <input class="radio_buttons optional" id="admin_role_ids_#{role.id}" name="admin[role_ids]" type="radio" value="#{role.id}" #{(@user.role_ids.include?( role.id ) ? "checked='checked'" : nil )} />
        = role.name
      - elsif current_admin.has_any_role?( :admin )
        - if role.name != "superadmin"
          = radio_button_tag( :admin_role, role.name, @user.role_ids.include?( role.id ) )
          = role.name

.field
  = f.label :password
  = f.password_field :password

.field
  = f.label :password_confirmation
  = f.password_field :password_confirmation

.field
  = f.label 'current_password'
  <i>(we need your current password to confirm your changes)</i> <br>
  = f.password_field :current_password


= hidden_field_tag "page",              params[:page]
= hidden_field_tag "num_per_page",      params[:num_per_page]
= hidden_field_tag "sort",              params[:sort]
= hidden_field_tag "direction",         params[:direction]
= hidden_field_tag "first_name",        (params[:first_name].present?)        ? params[:first_name]       : nil
= hidden_field_tag "last_name",         (params[:last_name].present?)         ? params[:last_name]        : nil
= hidden_field_tag "func",              (params[:func].present?)              ? params[:func]             : nil

.actions
  
  = submit_tag 'Save', :class => 'btn btn-primary'



